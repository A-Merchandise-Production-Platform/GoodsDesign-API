generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum Roles {
  ADMIN
  MANAGER
  STAFF
  FACTORYOWNER
  CUSTOMER
}

model User {
  id            String    @id @default(uuid())
  email         String?   @unique @default("")
  password      String?   @default("")
  gender      Boolean   @default(false)
  dateOfBirth DateTime?
  imageUrl    String?   @default("")
  isActive    Boolean   @default(false)
  isDeleted   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  createdBy   String?
  updatedAt   DateTime?
  updatedBy   String?
  deletedBy   String?
  deletedAt   DateTime?
  role        Roles

  addresses   Address[]

  @@map("Users")
}

model Address {
  id         String @id @default(uuid())
  provinceID Int
  districtID Int
  wardCode   String
  street     String
  userId     String

  user       User   @relation(fields: [userId], references: [id])

  @@map("Addresses")
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String?
  imageUrl    String?
  isActive    Boolean   @default(true)
  isDeleted   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  createdBy   String?
  updatedAt   DateTime?
  updatedBy   String?
  deletedAt   DateTime?
  deletedBy   String?

  products    Product[]

  @@map("Categories")
}

model Product {
  id          String    @id @default(uuid())
  name        String
  description String?
  imageUrl    String?
  model3DUrl  String?
  isActive    Boolean   @default(true)
  isDeleted   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  createdBy   String?
  updatedAt   DateTime?
  updatedBy   String?
  deletedAt   DateTime?
  deletedBy   String?
  categoryId  String

  category    Category  @relation(fields: [categoryId], references: [id])

  @@map("Products")
}

model SystemConfigBank {
  id               Int      @id @default(autoincrement())
  name             String
  code             String   @unique
  bin              String   @unique
  shortName        String
  logo             String
  transferSupported Boolean  @default(false)
  lookupSupported  Boolean  @default(false)
  support          Int      @default(0)
  isTransfer       Boolean  @default(false)
  swiftCode        String?
  isActive         Boolean  @default(true)
  isDeleted        Boolean  @default(false)
  createdAt        DateTime @default(now())
  createdBy        String?
  updatedAt        DateTime?
  updatedBy        String?
  deletedAt        DateTime?
  deletedBy        String?

  @@map("SystemConfigBanks")
}

model SystemConfigColor {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  code       String   @unique
  isActive   Boolean  @default(true)
  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  createdBy  String?
  updatedAt  DateTime?
  updatedBy  String?
  deletedAt  DateTime?
  deletedBy  String?

  @@map("SystemConfigColors")
}

model SystemConfigSize {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  isActive   Boolean  @default(true)
  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  createdBy  String?
  updatedAt  DateTime?
  updatedBy  String?
  deletedAt  DateTime?
  deletedBy  String?

  @@map("SystemConfigSizes")
}
