# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Authentication response"""
type AuthResponseDto {
  accessToken: String!
  refreshToken: String!
  user: UserEntity!
}

"""Blank Variances"""
type BlankVariancesEntity {
  blankPrice: Int!
  id: ID!
  information: JSON!
  product: ProductEntity
  productId: String!
}

type CartItemEntity {
  createdAt: DateTime!
  designId: String!
  id: ID!
  quantity: Int!
  userId: String!
}

type CategoryEntity {
  createdAt: DateTime!
  createdBy: String
  deletedAt: DateTime
  deletedBy: String
  description: String
  id: ID!
  imageUrl: String
  isActive: Boolean!
  isDeleted: Boolean!
  name: String!
  products: [ProductEntity!]
  totalProducts: Int
  updatedAt: DateTime
  updatedBy: String
}

"""Create Blank Variance"""
input CreateBlankVarianceDto {
  blankPrice: Int!
  information: JSON!
  productId: String!
}

input CreateCartItemDto {
  designId: String!
  quantity: Int!
}

"""Create category input"""
input CreateCategoryDto {
  description: String
  imageUrl: String
  name: String!
}

input CreateDesignPositionDto {
  designId: String!
  designJSON: JSON!
  productPositionTypeId: String!
}

input CreateNotificationDto {
  content: String
  isRead: Boolean! = false
  title: String
  url: String
  userId: String!
}

input CreateProductDesignDto {
  blankVariantId: String!
  isFinalized: Boolean! = false
  isPublic: Boolean! = false
  isTemplate: Boolean! = false
  saved3DPreviewUrl: String!
  userId: String!
}

"""Create Product"""
input CreateProductDto {
  categoryId: String!
  description: String
  imageUrl: String
  model3DUrl: String
  name: String!
}

input CreateProductPositionTypeDto {
  basePrice: Int!
  positionName: String!
  productId: String!
}

input CreateSystemConfigBankDto {
  bin: String!
  code: String!
  isActive: Boolean! = true
  logo: String!
  name: String!
  shortName: String!
}

input CreateSystemConfigColorDto {
  code: String!
  isActive: Boolean! = true
  name: String!
}

input CreateSystemConfigSizeDto {
  code: String!
  isActive: Boolean! = true
  name: String!
}

"""Create user input"""
input CreateUserDto {
  dateOfBirth: String
  email: String!
  gender: Boolean = false
  imageUrl: String
  name: String!
  password: String!
  phoneNumber: String
  role: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DesignPositionEntity {
  design: ProductDesignEntity
  designId: String!
  designJSON: JSON!
  id: ID!
  positionType: ProductPositionTypeEntity
  productPositionTypeId: String!
}

type FactoryContract {
  contractNumber: String!
  effectiveDate: String!
  expirationDate: String
  paymentTerm: Float!
  productionCommitment: Float!
  productionCostPerUnit: Float!
  qualityThreshold: Float!
  responseTimeLimit: Float!
}

type FactoryInformation {
  businessLicenseNumber: String!
  createdAt: String!
  factoryAddress: String!
  factoryEmail: String!
  factoryName: String!
  factoryPhoneNumber: String!
  taxIdentificationNumber: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""Login input"""
input LoginDto {
  email: String!
  password: String!
}

type Mutation {
  clearCart: Boolean!
  createBlankVariance(createBlankVarianceInput: CreateBlankVarianceDto!): BlankVariancesEntity!
  createCartItem(createCartItemInput: CreateCartItemDto!): CartItemEntity!
  createCategory(createCategoryInput: CreateCategoryDto!): CategoryEntity!
  createDesignPosition(input: CreateDesignPositionDto!): DesignPositionEntity!
  createNotification(input: CreateNotificationDto!): NotificationEntity!
  createProduct(input: CreateProductDto!): ProductEntity!
  createProductDesign(input: CreateProductDesignDto!): ProductDesignEntity!
  createProductPositionType(input: CreateProductPositionTypeDto!): ProductPositionTypeEntity!
  createSystemConfigBank(input: CreateSystemConfigBankDto!): SystemConfigBankEntity!
  createSystemConfigColor(input: CreateSystemConfigColorDto!): SystemConfigColorEntity!
  createSystemConfigSize(input: CreateSystemConfigSizeDto!): SystemConfigSizeEntity!
  createUser(createUserInput: CreateUserDto!): UserEntity!
  deleteBlankVariance(id: String!): BlankVariancesEntity!
  deleteCartItem(id: String!): CartItemEntity!
  deleteCategory(id: String!): CategoryEntity!
  deleteProduct(id: String!): ProductEntity!
  deleteUser(id: String!): UserEntity!
  login(loginInput: LoginDto!): AuthResponseDto!
  logout: String!
  markAllNotificationsAsRead: [NotificationEntity!]!
  markNotificationAsRead(id: ID!): NotificationEntity!
  refreshToken(refreshTokenInput: RefreshTokenDto!): AuthResponseDto!
  register(registerInput: RegisterDto!): AuthResponseDto!
  removeDesignPosition(id: ID!): DesignPositionEntity!
  removeNotification(id: ID!): NotificationEntity!
  removeProductDesign(id: ID!): ProductDesignEntity!
  removeProductPositionType(id: ID!): ProductPositionTypeEntity!
  removeSystemConfigBank(id: ID!): SystemConfigBankEntity!
  removeSystemConfigColor(id: ID!): SystemConfigColorEntity!
  removeSystemConfigSize(id: ID!): SystemConfigSizeEntity!
  restoreCategory(id: String!): CategoryEntity!
  restoreProduct(id: String!): ProductEntity!
  toggleActiveCategory(id: String!): CategoryEntity!
  toggleActiveProduct(id: String!): ProductEntity!
  updateBlankVariance(id: String!, updateBlankVarianceInput: UpdateBlankVarianceDto!): BlankVariancesEntity!
  updateCartItem(id: String!, updateCartItemInput: UpdateCartItemDto!): CartItemEntity!
  updateCategory(id: String!, updateCategoryInput: UpdateCategoryDto!): CategoryEntity!
  updateDesignPosition(input: UpdateDesignPositionDto!): DesignPositionEntity!
  updateNotification(input: UpdateNotificationDto!): NotificationEntity!
  updateProduct(id: String!, input: UpdateProductDto!): ProductEntity!
  updateProductDesign(input: UpdateProductDesignDto!): ProductDesignEntity!
  updateProductPositionType(input: UpdateProductPositionTypeDto!): ProductPositionTypeEntity!
  updateSystemConfigBank(input: UpdateSystemConfigBankDto!): SystemConfigBankEntity!
  updateSystemConfigColor(input: UpdateSystemConfigColorDto!): SystemConfigColorEntity!
  updateSystemConfigSize(input: UpdateSystemConfigSizeDto!): SystemConfigSizeEntity!
  updateUser(id: String!, updateUserInput: UpdateUserDto!): UserEntity!
}

type NotificationEntity {
  content: String
  createdAt: DateTime!
  id: ID!
  isRead: Boolean!
  title: String
  updatedAt: DateTime
  url: String
  user: UserEntity
  userId: String!
}

type ProductDesignEntity {
  blankVariant: BlankVariancesEntity
  blankVariantId: String!
  createdAt: DateTime!
  designPositions: [DesignPositionEntity!]
  id: ID!
  isFinalized: Boolean!
  isPublic: Boolean!
  isTemplate: Boolean!
  saved3DPreviewUrl: String!
  user: UserEntity
  userId: String!
}

"""Product"""
type ProductEntity {
  blankVariances: [BlankVariancesEntity!]
  category: CategoryEntity
  categoryId: String!
  createdAt: DateTime!
  createdBy: String
  deletedAt: DateTime
  deletedBy: String
  description: String
  id: ID!
  imageUrl: String
  isActive: Boolean!
  isDeleted: Boolean!
  model3DUrl: String
  name: String!
  positionTypes: [ProductPositionTypeEntity!]
  updatedAt: DateTime
  updatedBy: String
}

type ProductPositionTypeEntity {
  basePrice: Int!
  id: ID!
  positionName: String!
  positionTypes: [ProductPositionTypeEntity!]
  product: ProductEntity
  productId: String!
}

type Query {
  allCartItems: [CartItemEntity!]!
  blankVariance(id: String!): BlankVariancesEntity
  blankVariances: [BlankVariancesEntity!]!
  cartItem(id: String!): CartItemEntity!
  categories: [CategoryEntity!]!
  category(id: String!): CategoryEntity!
  designPosition(id: ID!): DesignPositionEntity!
  designPositions(designId: String): [DesignPositionEntity!]!
  getMe: UserEntity!
  notification(id: ID!): NotificationEntity!
  notifications: [NotificationEntity!]!
  product(id: String!): ProductEntity!
  productDesign(id: ID!): ProductDesignEntity!
  productDesigns(userId: String): [ProductDesignEntity!]!
  productPositionType(id: ID!): ProductPositionTypeEntity!
  productPositionTypes(productId: String!): [ProductPositionTypeEntity!]!
  products: [ProductEntity!]!
  systemConfigBank(id: ID!): SystemConfigBankEntity!
  systemConfigBanks: [SystemConfigBankEntity!]!
  systemConfigColor(id: ID!): SystemConfigColorEntity!
  systemConfigColors: [SystemConfigColorEntity!]!
  systemConfigSize(id: ID!): SystemConfigSizeEntity!
  systemConfigSizes: [SystemConfigSizeEntity!]!
  user(id: String!): UserEntity!
  userCartItems: [CartItemEntity!]!
  users: [UserEntity!]!
}

"""Refresh token input"""
input RefreshTokenDto {
  refreshToken: String!
}

"""Register input"""
input RegisterDto {
  email: String!

  """True if registering as factory owner, false for customer"""
  isFactoryOwner: Boolean! = false
  name: String!
  password: String!
}

"""User roles"""
enum Roles {
  ADMIN
  CUSTOMER
  FACTORYOWNER
  MANAGER
  STAFF
}

type SystemConfigBankEntity {
  bin: String!
  code: String!
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  logo: String!
  name: String!
  shortName: String!
}

type SystemConfigColorEntity {
  code: String!
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  name: String!
}

type SystemConfigSizeEntity {
  code: String!
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  name: String!
}

"""Update Blank Variance"""
input UpdateBlankVarianceDto {
  blankPrice: Int
  information: JSON
  productId: String
}

input UpdateCartItemDto {
  quantity: Int!
}

"""Update category input"""
input UpdateCategoryDto {
  description: String
  imageUrl: String
  name: String
}

input UpdateDesignPositionDto {
  designJSON: JSON
  id: ID!
}

input UpdateNotificationDto {
  content: String
  id: ID!
  isRead: Boolean = false
  title: String
  url: String
  userId: String
}

input UpdateProductDesignDto {
  id: ID!
  isFinalized: Boolean
  isPublic: Boolean
  isTemplate: Boolean
  saved3DPreviewUrl: String
}

"""Update Product"""
input UpdateProductDto {
  categoryId: String
  description: String
  imageUrl: String
  model3DUrl: String
  name: String
}

input UpdateProductPositionTypeDto {
  basePrice: Int
  id: ID!
  positionName: String
  productId: String
}

input UpdateSystemConfigBankDto {
  bin: String
  code: String
  id: ID!
  isActive: Boolean = true
  logo: String
  name: String
  shortName: String
}

input UpdateSystemConfigColorDto {
  code: String
  id: ID!
  isActive: Boolean = true
  name: String
}

input UpdateSystemConfigSizeDto {
  code: String
  id: ID!
  isActive: Boolean = true
  name: String
}

"""Update user input"""
input UpdateUserDto {
  dateOfBirth: String
  email: String
  gender: Boolean = false
  imageUrl: String
  name: String
  password: String
  phoneNumber: String
  role: String
  updatedBy: String
}

type UserEntity {
  createdAt: DateTime!
  createdBy: String
  dateOfBirth: DateTime
  deletedAt: DateTime
  deletedBy: String
  email: String
  gender: Boolean!
  id: ID!
  imageUrl: String
  isActive: Boolean!
  isDeleted: Boolean!
  name: String
  phoneNumber: String
  role: Roles!
  updatedAt: DateTime
  updatedBy: String
}