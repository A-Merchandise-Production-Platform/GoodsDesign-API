# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AddressEntity {
  districtID: Float!
  factory: FactoryEntity
  factoryId: String!
  id: String!
  provinceID: Float!
  street: String!
  user: UserEntity
  userId: String!
  wardCode: String!
}

"""Authentication response"""
type AuthResponseDto {
  accessToken: String!
  refreshToken: String!
  user: UserEntity!
}

"""Blank Variances"""
type BlankVariancesEntity {
  blankPrice: Int!
  id: ID!
  information: JSON!
  product: ProductEntity
  productId: String!
}

input CalculateShippingFeeDto {
  fromDistrictId: Int!
  fromWardCode: String!
  height: Int = 10
  length: Int = 10
  serviceId: Int
  serviceTypeId: Int = 2
  toDistrictId: Int!
  toWardCode: String!
  weight: Int = 1000
  width: Int = 10
}

type CartItemEntity {
  createdAt: DateTime!
  design: ProductDesignEntity!
  id: ID!
  quantity: Int!
  userId: String!
}

type CategoryEntity {
  createdAt: DateTime!
  createdBy: String
  deletedAt: DateTime
  deletedBy: String
  description: String
  id: ID!
  imageUrl: String
  isActive: Boolean!
  isDeleted: Boolean!
  name: String!
  products: [ProductEntity!]
  totalProducts: Int
  updatedAt: DateTime
  updatedBy: String
}

"""Create Address Input"""
input CreateAddressInput {
  districtID: String!
  factoryId: String
  provinceID: String!
  street: String!
  wardCode: String!
}

"""Create Blank Variance"""
input CreateBlankVarianceDto {
  blankPrice: Int!
  information: JSON!
  productId: String!
}

input CreateCartItemDto {
  designId: String!
  quantity: Int!
}

"""Create category input"""
input CreateCategoryDto {
  description: String
  imageUrl: String
  name: String!
}

input CreateDesignPositionDto {
  designId: String!
  designJSON: JSON!
  productPositionTypeId: String!
}

input CreateNotificationDto {
  content: String
  isRead: Boolean! = false
  title: String
  url: String
  userId: String!
}

input CreateOrderDetailDto {
  designId: String!
  quantity: Int!
}

input CreateOrderDto {
  orderDetails: [CreateOrderDetailDto!]!
  shippingPrice: Int!
}

input CreateProductDesignDto {
  blankVariantId: String!
  isFinalized: Boolean! = false
  isPublic: Boolean! = false
  isTemplate: Boolean! = false
  userId: String!
}

"""Create Product"""
input CreateProductDto {
  categoryId: String!
  description: String
  imageUrl: String
  model3DUrl: String
  name: String!
}

input CreateProductPositionTypeDto {
  basePrice: Int!
  positionName: String!
  productId: String!
}

input CreateSystemConfigBankDto {
  bin: String!
  code: String!
  isActive: Boolean! = true
  logo: String!
  name: String!
  shortName: String!
}

input CreateSystemConfigDiscountDto {
  discountPercent: Float!
  minQuantity: Float!
  name: String!
  productId: String!
}

input CreateSystemConfigVariantInput {
  isActive: Boolean
  name: String!
  productId: String!
  value: JSONObject!
}

"""Create user input"""
input CreateUserDto {
  dateOfBirth: String
  email: String!
  gender: Boolean = false
  imageUrl: String
  name: String!
  password: String!
  phoneNumber: String
  role: String
}

type CustomerOrderDetailEntity {
  designId: String!
  id: ID!
  orderId: String!
  price: Int!
  qualityCheckStatus: String!
  quantity: Int!
  reworkStatus: String!
  status: String!
}

type CustomerOrderEntity {
  customerId: String!
  depositPaid: Int!
  id: ID!
  orderDate: DateTime!
  orderDetails: [CustomerOrderDetailEntity!]
  shippingPrice: Int!
  status: String!
  totalPrice: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DesignPositionEntity {
  design: ProductDesignEntity
  designId: String!
  designJSON: JSON!
  id: ID!
  positionType: ProductPositionTypeEntity
  productPositionTypeId: String!
}

type District {
  districtId: Int!
  districtName: String!
  provinceId: Int!
}

type FactoryEntity {
  addressId: String
  businessLicenseUrl: String
  contactPersonName: String
  contactPersonPhone: String
  contactPersonRole: String
  contractAccepted: Boolean
  contractAcceptedAt: DateTime
  contractUrl: String
  description: String
  establishedDate: DateTime
  factoryStatus: FactoryStatus
  isSubmitted: Boolean
  leadTime: Int
  maxPrintingCapacity: Int
  minimumOrderQuantity: Int
  name: String!
  operationalHours: String
  owner: UserEntity!
  printingMethods: [String!]!
  products: [ProductEntity!]!
  qualityCertifications: String
  reviewedAt: DateTime
  reviewedBy: String
  specializations: [String!]!
  statusNote: String
  taxIdentificationNumber: String
  totalEmployees: Int
  website: String
}

enum FactoryStatus {
  APPROVED
  PENDING_APPROVAL
  REJECTED
  SUSPENDED
}

type FileUploadResponse {
  url: String!
}

input GetAvailableServicesDto {
  fromDistrict: Int!
  toDistrict: Int!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

"""Login input"""
input LoginDto {
  email: String!
  password: String!
}

type Mutation {
  calculateShippingFee(input: CalculateShippingFeeDto!): ShippingFee!
  clearCart: Boolean!
  createAddress(createAddressInput: CreateAddressInput!): AddressEntity!
  createBlankVariance(createBlankVarianceInput: CreateBlankVarianceDto!): BlankVariancesEntity!
  createCartItem(createCartItemInput: CreateCartItemDto!): CartItemEntity!
  createCategory(createCategoryInput: CreateCategoryDto!): CategoryEntity!
  createDesignPosition(input: CreateDesignPositionDto!): DesignPositionEntity!
  createNotification(input: CreateNotificationDto!): NotificationEntity!
  createOrder(createOrderInput: CreateOrderDto!): CustomerOrderEntity!
  createPayment(gateway: String!, paymentId: String!): String!
  createProduct(input: CreateProductDto!): ProductEntity!
  createProductDesign(input: CreateProductDesignDto!): ProductDesignEntity!
  createProductPositionType(input: CreateProductPositionTypeDto!): ProductPositionTypeEntity!
  createSystemConfigBank(input: CreateSystemConfigBankDto!): SystemConfigBankEntity!
  createSystemConfigDiscount(createDiscountInput: CreateSystemConfigDiscountDto!): SystemConfigDiscountEntity!
  createSystemConfigVariant(createSystemConfigVariantInput: CreateSystemConfigVariantInput!): SystemConfigVariant!
  createUser(createUserInput: CreateUserDto!): UserEntity!
  deleteAddress(id: String!): AddressEntity!
  deleteBlankVariance(id: String!): BlankVariancesEntity!
  deleteCartItem(id: String!): CartItemEntity!
  deleteCategory(id: String!): CategoryEntity!
  deleteProduct(id: String!): ProductEntity!
  deleteUser(id: String!): UserEntity!
  login(loginInput: LoginDto!): AuthResponseDto!
  logout: String!
  markAllNotificationsAsRead: [NotificationEntity!]!
  markNotificationAsRead(id: ID!): NotificationEntity!
  refreshToken(refreshTokenInput: RefreshTokenDto!): AuthResponseDto!
  register(registerInput: RegisterDto!): AuthResponseDto!
  removeDesignPosition(id: ID!): DesignPositionEntity!
  removeNotification(id: ID!): NotificationEntity!
  removeProductDesign(id: ID!): ProductDesignEntity!
  removeProductPositionType(id: ID!): ProductPositionTypeEntity!
  removeSystemConfigBank(id: ID!): SystemConfigBankEntity!
  removeSystemConfigDiscount(id: String!): SystemConfigDiscountEntity!
  removeSystemConfigVariant(id: String!): SystemConfigVariant!
  restoreCategory(id: String!): CategoryEntity!
  restoreProduct(id: String!): ProductEntity!
  sendEmail(to: String!): Boolean!
  toggleActiveCategory(id: String!): CategoryEntity!
  toggleActiveProduct(id: String!): ProductEntity!
  updateAddress(id: String!, updateAddressInput: UpdateAddressInput!): AddressEntity!
  updateBlankVariance(id: String!, updateBlankVarianceInput: UpdateBlankVarianceDto!): BlankVariancesEntity!
  updateCartItem(id: String!, updateCartItemInput: UpdateCartItemDto!): CartItemEntity!
  updateCategory(id: String!, updateCategoryInput: UpdateCategoryDto!): CategoryEntity!
  updateDesignPosition(input: UpdateDesignPositionDto!): DesignPositionEntity!
  updateFactoryInfo(updateFactoryInfoInput: UpdateFactoryInfoDto!): FactoryEntity!
  updateNotification(input: UpdateNotificationDto!): NotificationEntity!
  updateProduct(id: String!, input: UpdateProductDto!): ProductEntity!
  updateProductDesign(input: UpdateProductDesignDto!): ProductDesignEntity!
  updateProductPositionType(input: UpdateProductPositionTypeDto!): ProductPositionTypeEntity!
  updateSystemConfigBank(input: UpdateSystemConfigBankDto!): SystemConfigBankEntity!
  updateSystemConfigDiscount(id: String!, updateDiscountInput: UpdateSystemConfigDiscountDto!): SystemConfigDiscountEntity!
  updateSystemConfigVariant(id: String!, updateSystemConfigVariantInput: CreateSystemConfigVariantInput!): SystemConfigVariant!
  updateUser(id: String!, updateUserInput: UpdateUserDto!): UserEntity!
  uploadFile(file: Upload!): FileUploadResponse!
}

type NotificationEntity {
  content: String
  createdAt: DateTime!
  id: ID!
  isRead: Boolean!
  title: String
  updatedAt: DateTime
  url: String
  user: UserEntity
  userId: String!
}

type ProductDesignEntity {
  blankVariant: BlankVariancesEntity
  blankVariantId: String!
  createdAt: DateTime!
  designPositions: [DesignPositionEntity!]
  id: ID!
  isFinalized: Boolean!
  isPublic: Boolean!
  isTemplate: Boolean!
  user: UserEntity
  userId: String!
}

"""Product"""
type ProductEntity {
  blankVariances: [BlankVariancesEntity!]
  category: CategoryEntity
  categoryId: String!
  createdAt: DateTime!
  createdBy: String
  deletedAt: DateTime
  deletedBy: String
  description: String
  discounts: [SystemConfigDiscountEntity!]
  id: ID!
  imageUrl: String
  isActive: Boolean!
  isDeleted: Boolean!
  model3DUrl: String
  name: String!
  positionTypes: [ProductPositionTypeEntity!]
  updatedAt: DateTime
  updatedBy: String
}

type ProductPositionTypeEntity {
  basePrice: Int!
  id: ID!
  positionName: String!
  positionTypes: [ProductPositionTypeEntity!]
  product: ProductEntity
  productId: String!
}

type Province {
  provinceId: Int!
  provinceName: String!
}

type Query {
  address(id: String!): AddressEntity!
  addresses: [AddressEntity!]!
  availableServices(servicesInput: GetAvailableServicesDto!): [ShippingService!]!
  blankVariance(id: String!): BlankVariancesEntity
  blankVariances: [BlankVariancesEntity!]!
  cartItem(id: String!): CartItemEntity!
  categories: [CategoryEntity!]!
  category(id: String!): CategoryEntity!
  designPosition(id: ID!): DesignPositionEntity!
  designPositions(designId: String): [DesignPositionEntity!]!
  district(districtId: Int!): District!
  districts(provinceId: Int!): [District!]!
  getApplicableDiscount(productId: String!, quantity: Float!): Float!
  getMe: UserEntity!
  getMyFactory: FactoryEntity!
  notification(id: ID!): NotificationEntity!
  notifications: [NotificationEntity!]!
  product(id: String!): ProductEntity!
  productDesign(id: ID!): ProductDesignEntity!
  productDesigns: [ProductDesignEntity!]!
  productPositionType(id: ID!): ProductPositionTypeEntity!
  productPositionTypes(productId: String!): [ProductPositionTypeEntity!]!
  products: [ProductEntity!]!
  province(provinceId: Int!): Province!
  provinces: [Province!]!
  systemConfigBank(id: ID!): SystemConfigBankEntity!
  systemConfigBanks: [SystemConfigBankEntity!]!
  systemConfigDiscount(id: String!): SystemConfigDiscountEntity!
  systemConfigDiscounts: [SystemConfigDiscountEntity!]!
  systemConfigVariant(id: String!): SystemConfigVariant!
  systemConfigVariants: [SystemConfigVariant!]!
  systemConfigVariantsByProduct(productId: String!): [SystemConfigVariant!]!
  user(id: String!): UserEntity!
  userCartItems: [CartItemEntity!]!
  userOrder(id: String!): CustomerOrderEntity!
  userOrders: [CustomerOrderEntity!]!
  users: [UserEntity!]!
  ward(wardCode: String!): Ward!
  wards(districtId: Int!): [Ward!]!
}

"""Refresh token input"""
input RefreshTokenDto {
  refreshToken: String!
}

"""Register input"""
input RegisterDto {
  email: String!

  """True if registering as factory owner, false for customer"""
  isFactoryOwner: Boolean! = false
  name: String!
  password: String!
}

"""User roles"""
enum Roles {
  ADMIN
  CUSTOMER
  FACTORYOWNER
  MANAGER
  STAFF
}

type ShippingFee {
  total: Int!
}

type ShippingService {
  serviceId: Int!
  serviceTypeId: Int!
  shortName: String!
}

type SystemConfigBankEntity {
  bin: String!
  code: String!
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  logo: String!
  name: String!
  shortName: String!
}

type SystemConfigDiscountEntity {
  createdAt: DateTime!
  discountPercent: Float!
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  minQuantity: Float!
  name: String!
  product: ProductEntity!
  updatedAt: DateTime!
}

type SystemConfigVariant {
  id: String!
  isActive: Boolean!
  isDeleted: Boolean!
  name: String!
  product: ProductEntity
  productId: String!
  value: JSONObject!
}

input UpdateAddressInput {
  districtID: String
  factoryId: String
  provinceID: String
  street: String
  wardCode: String
}

"""Update Blank Variance"""
input UpdateBlankVarianceDto {
  blankPrice: Int
  information: JSON
  productId: String
}

input UpdateCartItemDto {
  quantity: Int!
}

"""Update category input"""
input UpdateCategoryDto {
  description: String
  imageUrl: String
  name: String
}

input UpdateDesignPositionDto {
  designJSON: JSON
  id: ID!
}

"""Update factory information input"""
input UpdateFactoryInfoDto {
  addressId: String
  businessLicenseUrl: String
  contactPersonName: String
  contactPersonPhone: String
  contactPersonRole: String
  description: String
  establishedDate: DateTime
  leadTime: Int
  maxPrintingCapacity: Int
  minimumOrderQuantity: Int
  name: String
  operationalHours: String
  printingMethods: [String!]
  qualityCertifications: String
  specializations: [String!]

  """Set to true to submit factory information for approval"""
  submit: Boolean
  taxIdentificationNumber: String
  totalEmployees: Int
  website: String
}

input UpdateNotificationDto {
  content: String
  id: ID!
  isRead: Boolean = false
  title: String
  url: String
  userId: String
}

input UpdateProductDesignDto {
  id: ID!
  isFinalized: Boolean
  isPublic: Boolean
  isTemplate: Boolean
}

"""Update Product"""
input UpdateProductDto {
  categoryId: String
  description: String
  imageUrl: String
  model3DUrl: String
  name: String
}

input UpdateProductPositionTypeDto {
  basePrice: Int
  id: ID!
  positionName: String
  productId: String
}

input UpdateSystemConfigBankDto {
  bin: String
  code: String
  id: ID!
  isActive: Boolean = true
  logo: String
  name: String
  shortName: String
}

input UpdateSystemConfigDiscountDto {
  discountPercent: Float
  minQuantity: Float
  name: String
  productId: String
}

"""Update user input"""
input UpdateUserDto {
  dateOfBirth: String
  email: String
  gender: Boolean = false
  imageUrl: String
  name: String
  password: String
  phoneNumber: String
  role: String
  updatedBy: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserEntity {
  createdAt: DateTime!
  createdBy: String
  dateOfBirth: DateTime
  deletedAt: DateTime
  deletedBy: String
  email: String
  factory: FactoryEntity
  gender: Boolean!
  id: ID!
  imageUrl: String
  isActive: Boolean!
  isDeleted: Boolean!
  name: String
  phoneNumber: String
  role: Roles!
  updatedAt: DateTime
  updatedBy: String
}

type Ward {
  districtId: Int!
  wardCode: String!
  wardName: String!
}